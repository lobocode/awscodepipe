name: ci-build

on:
  workflow_call:
    inputs:
      build-tool:
        description: 'Build tool to use (maven or gradle)'
        required: true
        type: string

jobs:
  ci-build:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Xmx256M -Xms128M -XX:+UseG1GC -Dfile.encoding=UTF-8 -Dhttp.proxyHost=myproxyserver.com -Dhttp.proxyPort=8080 -Dhttps.proxyHost=myproxyserver.com -Dhttps.proxyPort=8080 -Dmaven.wagon.httpconnectionManager.ttlSeconds=120"

    steps:
    - name: Checkout codebase
      uses: actions/checkout@v2

    - name: Install JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: adopt

    - name: Cache Maven dependencies
      if: ${{ inputs.build-tool == 'maven' }}
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Cache Gradle dependencies
      if: ${{ inputs.build-tool == 'gradle' }}
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Build and Run unit tests with Maven
      if: ${{ inputs.build-tool == 'maven' }}
      run: mvn clean install -DskipIntTests -DskipDeploy --batch-mode

    - name: Build and Run unit tests with Gradle
      if: ${{ inputs.build-tool == 'gradle' }}
      run: ./gradlew clean build

    - name: Set up JaCoCo coverage report
      if: ${{ inputs.build-tool == 'maven' }}
      run: mvn org.jacoco:jacoco-maven-plugin:prepare-agent org.jacoco:jacoco-maven-plugin:report

    - name: Publish JaCoCo coverage report
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

    - name: Generate JaCoCo coverage report with Gradle
      if: ${{ inputs.build-tool == 'gradle' }}
      run: ./gradlew jacocoTestReport

    - name: Publish JaCoCo coverage report
      if: ${{ inputs.build-tool == 'gradle' }}
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
